{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-webstorage\";\nimport * as i2 from \"../config/application-config.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(localStorageService, sessionStorageService, applicationConfigService) {\n      this.localStorageService = localStorageService;\n      this.sessionStorageService = sessionStorageService;\n      this.applicationConfigService = applicationConfigService;\n    }\n\n    intercept(request, next) {\n      var _a;\n\n      const serverApiUrl = this.applicationConfigService.getEndpointFor('');\n\n      if (!request.url || request.url.startsWith('http') && !(serverApiUrl && request.url.startsWith(serverApiUrl))) {\n        return next.handle(request);\n      }\n\n      const token = (_a = this.localStorageService.retrieve('authenticationToken')) !== null && _a !== void 0 ? _a : this.sessionStorageService.retrieve('authenticationToken');\n\n      if (token) {\n        request = request.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      }\n\n      return next.handle(request);\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.LocalStorageService), i0.ɵɵinject(i1.SessionStorageService), i0.ɵɵinject(i2.ApplicationConfigService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}