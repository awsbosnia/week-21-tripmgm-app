{"ast":null,"code":"import { map, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/core/config/application-config.service\";\nexport let ProfileService = /*#__PURE__*/(() => {\n  class ProfileService {\n    constructor(http, applicationConfigService) {\n      this.http = http;\n      this.applicationConfigService = applicationConfigService;\n      this.infoUrl = this.applicationConfigService.getEndpointFor('management/info');\n    }\n\n    getProfileInfo() {\n      if (this.profileInfo$) {\n        return this.profileInfo$;\n      }\n\n      this.profileInfo$ = this.http.get(this.infoUrl).pipe(map(response => {\n        var _a, _b;\n\n        const profileInfo = {\n          activeProfiles: response.activeProfiles,\n          inProduction: (_a = response.activeProfiles) === null || _a === void 0 ? void 0 : _a.includes('prod'),\n          openAPIEnabled: (_b = response.activeProfiles) === null || _b === void 0 ? void 0 : _b.includes('api-docs')\n        };\n\n        if (response.activeProfiles && response['display-ribbon-on-profiles']) {\n          const displayRibbonOnProfiles = response['display-ribbon-on-profiles'].split(',');\n          const ribbonProfiles = displayRibbonOnProfiles.filter(profile => {\n            var _a;\n\n            return (_a = response.activeProfiles) === null || _a === void 0 ? void 0 : _a.includes(profile);\n          });\n\n          if (ribbonProfiles.length > 0) {\n            profileInfo.ribbonEnv = ribbonProfiles[0];\n          }\n        }\n\n        return profileInfo;\n      }), shareReplay());\n      return this.profileInfo$;\n    }\n\n  }\n\n  ProfileService.ɵfac = function ProfileService_Factory(t) {\n    return new (t || ProfileService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ApplicationConfigService));\n  };\n\n  ProfileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProfileService,\n    factory: ProfileService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProfileService;\n})();","map":null,"metadata":{},"sourceType":"module"}