{"ast":null,"code":"import { LOCALE_ID } from '@angular/core';\nimport { registerLocaleData } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport locale from '@angular/common/locales/en';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { TranslateModule, TranslateLoader, MissingTranslationHandler } from '@ngx-translate/core';\nimport { NgxWebstorageModule } from 'ngx-webstorage';\nimport * as dayjs from 'dayjs';\nimport { NgbDateAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { SERVER_API_URL } from './app.constants';\nimport './config/dayjs';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomeModule } from './home/home.module';\nimport { EntityRoutingModule } from './entities/entity-routing.module'; // jhipster-needle-angular-add-module-import JHipster will add new module here\n\nimport { NgbDateDayjsAdapter } from './config/datepicker-adapter';\nimport { fontAwesomeIcons } from './config/font-awesome-icons';\nimport { httpInterceptorProviders } from 'app/core/interceptor/index';\nimport { translatePartialLoader, missingTranslationHandler } from './config/translation.config';\nimport { MainComponent } from './layouts/main/main.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/config/application-config.service\";\nimport * as i2 from \"@fortawesome/angular-fontawesome\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i4 from \"@ngx-translate/core\";\nimport * as i5 from \"ngx-webstorage\";\nimport * as i6 from \"@angular/service-worker\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    constructor(applicationConfigService, iconLibrary, dpConfig, translateService, sessionStorageService) {\n      var _a;\n\n      applicationConfigService.setEndpointPrefix(SERVER_API_URL);\n      registerLocaleData(locale);\n      iconLibrary.addIcons(...fontAwesomeIcons);\n      dpConfig.minDate = {\n        year: dayjs().subtract(100, 'year').year(),\n        month: 1,\n        day: 1\n      };\n      translateService.setDefaultLang('en'); // if user have changed language and navigates away from the application and back to the application then use previously choosed language\n\n      const langKey = (_a = sessionStorageService.retrieve('locale')) !== null && _a !== void 0 ? _a : 'en';\n      translateService.use(langKey);\n    }\n\n  }\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)(i0.ɵɵinject(i1.ApplicationConfigService), i0.ɵɵinject(i2.FaIconLibrary), i0.ɵɵinject(i3.NgbDatepickerConfig), i0.ɵɵinject(i4.TranslateService), i0.ɵɵinject(i5.SessionStorageService));\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [MainComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [Title, {\n      provide: LOCALE_ID,\n      useValue: 'en'\n    }, {\n      provide: NgbDateAdapter,\n      useClass: NgbDateDayjsAdapter\n    }, httpInterceptorProviders],\n    imports: [[BrowserModule, SharedModule, HomeModule, // jhipster-needle-angular-add-module JHipster will add new module here\n    EntityRoutingModule, AppRoutingModule, // Set this to true to enable service worker (PWA)\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: false\n    }), HttpClientModule, NgxWebstorageModule.forRoot({\n      prefix: 'jhi',\n      separator: '-',\n      caseSensitive: true\n    }), TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: translatePartialLoader,\n        deps: [HttpClient]\n      },\n      missingTranslationHandler: {\n        provide: MissingTranslationHandler,\n        useFactory: missingTranslationHandler\n      }\n    })]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}