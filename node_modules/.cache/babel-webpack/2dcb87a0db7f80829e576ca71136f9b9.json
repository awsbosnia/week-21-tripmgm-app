{"ast":null,"code":"import { of } from 'rxjs';\nimport { User } from './user-management.model';\nimport { UserManagementComponent } from './list/user-management.component';\nimport { UserManagementDetailComponent } from './detail/user-management-detail.component';\nimport { UserManagementUpdateComponent } from './update/user-management-update.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/user-management.service\";\nexport let UserManagementResolve = /*#__PURE__*/(() => {\n  class UserManagementResolve {\n    constructor(service) {\n      this.service = service;\n    }\n\n    resolve(route) {\n      const id = route.params['login'];\n\n      if (id) {\n        return this.service.find(id);\n      }\n\n      return of(new User());\n    }\n\n  }\n\n  UserManagementResolve.ɵfac = function UserManagementResolve_Factory(t) {\n    return new (t || UserManagementResolve)(i0.ɵɵinject(i1.UserManagementService));\n  };\n\n  UserManagementResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserManagementResolve,\n    factory: UserManagementResolve.ɵfac,\n    providedIn: 'root'\n  });\n  return UserManagementResolve;\n})();\nexport const userManagementRoute = [{\n  path: '',\n  component: UserManagementComponent,\n  data: {\n    defaultSort: 'id,asc'\n  }\n}, {\n  path: ':login/view',\n  component: UserManagementDetailComponent,\n  resolve: {\n    user: UserManagementResolve\n  }\n}, {\n  path: 'new',\n  component: UserManagementUpdateComponent,\n  resolve: {\n    user: UserManagementResolve\n  }\n}, {\n  path: ':login/edit',\n  component: UserManagementUpdateComponent,\n  resolve: {\n    user: UserManagementResolve\n  }\n}];","map":null,"metadata":{},"sourceType":"module"}