{"ast":null,"code":"import { mergeMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/auth/account.service\";\nimport * as i2 from \"app/core/auth/auth-jwt.service\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(accountService, authServerProvider) {\n      this.accountService = accountService;\n      this.authServerProvider = authServerProvider;\n    }\n\n    login(credentials) {\n      return this.authServerProvider.login(credentials).pipe(mergeMap(() => this.accountService.identity(true)));\n    }\n\n    logout() {\n      this.authServerProvider.logout().subscribe({\n        complete: () => this.accountService.authenticate(null)\n      });\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.AccountService), i0.ɵɵinject(i2.AuthServerProvider));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}